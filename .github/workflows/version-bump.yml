name: Version Bump Based on Commits

on:
  push:
    branches: [main]

jobs:
  bump-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          version: 10
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Check if commit is from GitHub Actions
        id: check_author
        run: |
          last_author=$(git log -1 --pretty=format:'%an')
          echo "Last commit author: $last_author"
          if [[ "$last_author" == "github-actions[bot]" ]]; then
            echo "::set-output name=is_bot::true"
          else
            echo "::set-output name=is_bot::false"
          fi
      - name: Determine version bump
        id: version_bump
        run: |
          commits=$(git log -1 --pretty=%B)
          echo "Commit message: $commits"
          if [[ "$commits" == *"BREAKING CHANGE"* ]]; then
            echo "::set-output name=type::major"
          elif [[ "$commits" == feat:* ]]; then
            echo "::set-output name=type::minor"
          elif [[ "$commits" == fix:* || "$commits" == chore:* || "$commits" == docs:* || "$commits" == refactor:* ]]; then
            echo "::set-output name=type::patch"
          else
            echo "::set-output name=type::none"
          fi
      - name: Check conditions for version bump
        id: conditions_check
        if: steps.check_author.outputs.is_bot == 'false' && steps.version_bump.outputs.type != 'none'
        run: echo "Both conditions met. Proceeding with version bump..."
      - name: Bump version
        if: steps.conditions_check.conclusion == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          npm --no-git-tag-version version ${{ steps.version_bump.outputs.type }}
      - name: Commit and push changes
        if: steps.conditions_check.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add package.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version")"
          git push origin main
